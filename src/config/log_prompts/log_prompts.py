"""Module for loading log prompts of project."""
import yaml

from config.app_config import AppConfig

class LogPrompts:
    """
        This class contains methods for loading log prompts from yaml file.
        ...
        Methods
        -------
        load()= data[]
            This method loads the variables from yaml to py.
    """
    SYSTEM_STARTING_INFO = None
    SYSTEM_ENDING_INFO = None
    CREATING_DATABASE_CONNECTION_DEBUG = None
    LOSING_DATABASE_CONNECTION_DEBUG = None
    WRONG_FILE_RUN_DEBUG = None
    FIRST_LOGIN_INFO = None
    SUCCESSFUL_LOGIN_INFO = None
    INVALID_LOGIN_INFO = None
    SUCCESSFUL_LOGOUT_INFO = None
    INVALID_INPUT_EXCEPTION_INFO = None
    SUCCESSFUL_CONNECTION_ESTABLISHED_INFO = None
    SUCCESSFUL_AUTHENTICATION_TABLE_CREATION_INFO = None
    SUCCESSFUL_EMPLOYEE_TABLE_CREATION_INFO = None
    SUCCESSFUL_VEHICLE_TYPE_TABLE_CREATION_INFO = None
    SUCCESSFUL_PARKING_SLOT_TABLE_CREATION_INFO = None
    SUCCESSFUL_CUSTOMER_TABLE_CREATION_INFO = None
    SUCCESSFUL_SLOT_BOOKING_TABLE_CREATION_INFO = None
    DATA_FETCHED_FROM_DATABASE_SUCESSFUL_INFO = None
    DATA_SAVED_TO_DATABASE_SUCCESSFUL_INFO = None

    @classmethod
    def load(cls) -> None:
        """
            Method to load variables from yaml to py
            Parameters = cls
            Return Type = None
        """
        with open(AppConfig.LOG_FILE_YAML_PATH, "r") as file:
            data = yaml.safe_load(file)
        
        cls.SYSTEM_STARTING_INFO = data["SYSTEM_STARTING_INFO"]
        cls.SYSTEM_ENDING_INFO = data["SYSTEM_ENDING_INFO"]
        cls.CREATING_DATABASE_CONNECTION_DEBUG = data["CREATING_DATABASE_CONNECTION_DEBUG"]
        cls.LOSING_DATABASE_CONNECTION_DEBUG = data["LOSING_DATABASE_CONNECTION_DEBUG"]
        cls.WRONG_FILE_RUN_DEBUG = data["WRONG_FILE_RUN_DEBUG"]
        cls.FIRST_LOGIN_INFO = data["FIRST_LOGIN_INFO"]
        cls.SUCCESSFUL_LOGIN_INFO = data["SUCCESSFUL_LOGIN_INFO"]
        cls.INVALID_LOGIN_INFO = data["INVALID_LOGIN_INFO"]
        cls.SUCCESSFUL_LOGOUT_INFO = data["SUCCESSFUL_LOGOUT_INFO"]
        cls.INVALID_INPUT_EXCEPTION_INFO = data["INVALID_INPUT_EXCEPTION_INFO"]
        cls.SUCCESSFUL_CONNECTION_ESTABLISHED_INFO = data["SUCCESSFUL_CONNECTION_ESTABLISHED_INFO"]
        cls.SUCCESSFUL_AUTHENTICATION_TABLE_CREATION_INFO = data["SUCCESSFUL_AUTHENTICATION_TABLE_CREATION_INFO"]
        cls.SUCCESSFUL_EMPLOYEE_TABLE_CREATION_INFO = data["SUCCESSFUL_EMPLOYEE_TABLE_CREATION_INFO"]
        cls.SUCCESSFUL_VEHICLE_TYPE_TABLE_CREATION_INFO = data["SUCCESSFUL_VEHICLE_TYPE_TABLE_CREATION_INFO"]
        cls.SUCCESSFUL_PARKING_SLOT_TABLE_CREATION_INFO = data["SUCCESSFUL_PARKING_SLOT_TABLE_CREATION_INFO"]
        cls.SUCCESSFUL_CUSTOMER_TABLE_CREATION_INFO = data["SUCCESSFUL_CUSTOMER_TABLE_CREATION_INFO"]
        cls.SUCCESSFUL_SLOT_BOOKING_TABLE_CREATION_INFO = data["SUCCESSFUL_SLOT_BOOKING_TABLE_CREATION_INFO"]
        cls.DATA_FETCHED_FROM_DATABASE_SUCESSFUL_INFO = data["DATA_FETCHED_FROM_DATABASE_SUCESSFUL_INFO"]
        cls.DATA_SAVED_TO_DATABASE_SUCCESSFUL_INFO = data["DATA_SAVED_TO_DATABASE_SUCCESSFUL_INFO"]